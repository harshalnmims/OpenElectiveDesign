<!DOCTYPE html>
<html lang="en">

<head>
  <title>Register Student</title>

  <%- include ('../partials/partial') %>
    <style>
      body {
        background-color: whitesmoke;
      }

      input[type="file"] {
        margin-top: 20px;
        margin-bottom: 30px;
      }

      #heading {
        margin-top: 10px;
      }

      #mains {
        margin-left: 20px;
      }

      .downloadFile {
        text-decoration: none;
        font-size: 20px;
        position: relative;
        top: 20px;
        color: red;
      }

      #excel {
        margin-top: 50px;
      }

      .downloadFile:hover {
        color: red;
        text-decoration: none;

      }

      #registerOptions {

        background-color: white;
        padding: 20px;
        border-radius: 10px;
        font-size: 18px;
        position: relative;
        top: 40px;
        width:100%;

      }

      #excelOption {
        margin-bottom: 20px;
      }

      #registerFormat {
        margin-top: 100px;
        padding: 30px;
        border-radius: 20px;
        width: 100%;
        background-color: white;
      }

      span {
        color: red;
      }

      #nonInsertedStudents {
        margin-top: 20px;
        background-color: white;
      }

      th{
    background-color: #e6f7ff;
      }
    tr:nth-child(odd) {
    background-color: #e6f7ff;
    }
    tr:nth-child(even) {
    background-color: white;
    }

      #nonInsertedMessage {
        visibility: hidden;
        margin-top: 50px;
        margin-bottom: 50px;
        text-align: center;
      }
      .notes {
        margin-left: 0;
      }
   

    </style>
</head>

<body>
  <%- include('sidebar.ejs') %>
    <%- include('header.ejs') %>
      <div id="mains" class="container">

        <%- include('loader.ejs') %>

        <div id="registerSuccess" ></div>
        <%- include('messageModal.ejs') %>

          <div id="registerOptions">
            <h3>Register Students</h3>
            <hr />
            <input type="radio" name="option" id="excelOption" checked> Register via Excel</input></br>
            <input type="radio" name="option" id="manualOption"> Register Manually</input>
          </div>


          <div id="registerFormat">

          </div>

          <div>
            <h4 id="nonInsertedMessage">Student's Data Not Inserted Due To Invalid Input Fields</h4>
            <div id="nonInsertedStudents">


            </div>
         
  
          </div>

        
</body>

<%- include ('../partials/partial2') %>
  <script src="../js/script.js"></script>
  <script>

    let excelRegister = `<div id="heading"><h2>Upload Student's Details file(Excel):</h2></div>
             <div>
             <input type="file" id="fileName" name = "studentDetails" /></br>
             <button type="submit" class="btn btn-primary excelDataSubmit" id='excelSubmit' >Upload</button>&nbsp;<button id='excelCancel' type="submit" class="btn btn-danger excelDataCancel" >Cancel</button>
             </div>
             </div>

             <ul>
                <li class="notes">Kindly Verify The File Before Uploading</li>
                <li class="notes"><b style="color:red; ">*</b>The selection of all fields is mandatory.</li>
                <li class="notes"><b style="color:red; ">*</b>The Acad Year and Campus field should only be selected, not written.</li> 
              </ul>

             <div style="margin-top: 2%; "><a class="downloadFile" href="<%- BASE_URL %>excel/StudentDetail_Demo1.xlsx" class="text-danger" >Download Sample Template</a></br>
             <h4 id="excel">Excel Format:</h4>
             <p>Username | Firstname | Lastname | Acad Session | Acad Year | Campus | Roll No.</p>
             </div>`;

    document.getElementById('excelOption').addEventListener('change', () => {

      let registerExcelFormat = document.getElementById('registerFormat');
      registerExcelFormat.innerHTML = excelRegister;
    });

    document.getElementById("manualOption").addEventListener("change", () => {


      let registerManually = document.getElementById('registerFormat');
      registerManually.innerHTML = `<div>
    <div class="form-row">
    <div class="form-group col-md-6">
      <label for="inputFname">Firstname</label>&ensp;&ensp;<span id="fnameError"></span>
      <input type="text" class="form-control" id="inputFname" placeholder="Firstname">
    </div>
    <div class="form-group col-md-6">
      <label for="inputLname">Lastname</label>&ensp;&ensp;<span id="lnameError"></span>
      <input type="text" class="form-control" id="inputLname" placeholder="Lastname">
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-6">
      <label for="inputUname">Username</label>&ensp;&ensp;<span id="unameError"></span>
      <input type="text" class="form-control" id="inputUname" placeholder="Username">
    </div>
    <div class="form-group col-md-6">
      <label for="inputrollNo">Roll No.</label>&ensp;&ensp;<span id="rollNoError"></span>
      <input type="text" class="form-control" id="inputrollNo" placeholder="Roll No.">
    </div>
  </div>
  <div class="form-group">
    <label for="inputCampus">Campus</label>&ensp;&ensp;<span id="campusError"></span>
    <select id="inputCampus" class="form-control">
        <option selected>Select Campus</option>
        <% campus.forEach(data => { %>
           <option value='<%= data.campus_name %>'><%= data.campus_name %></option>
        <% }); %>
      </select>
      </select>
  </div>
  <div class="form-row">
    <div class="form-group col-md-6">
        <label for="inputAcadYears">Acad Year</label>&ensp;&ensp;<span id="yearError"></span>
    <select id="inputAcadYear" class="form-control">
      </select>
    </div>
    <div class="form-group col-md-6">
      <label for="inputAcadSession">Acad Session</label>&ensp;&ensp;<span id="sessionError"></span>
      <select id="inputAcadSession" class="form-control">
        <option selected>Select Acad Session</option>
        <% acadSession.forEach(data => { %>
           <option value='<%= data.current_session %>'><%= data.current_session %></option>
        <% }); %>
      </select>
    </div>
   
  </div>
  <button type="submit" id="submitbtn" class="btn btn-danger mt-4 btnSubmit">Register Student</button>
</div>`;

      acadYearfun();

    });

    checkfun();

    function checkfun() {

      let registerExcelFormat = document.getElementById('registerFormat');
      registerExcelFormat.innerHTML = excelRegister;

    }

    function acadYearfun() {

      let acadYear = document.querySelector('#inputAcadYear');
      dynamicYear(acadYear);

    }

    document.addEventListener('click', async (e) => {
      if (e.target.classList.contains('excelDataSubmit')) {

        let files = document.querySelector('#fileName').value;
        let fileError = document.getElementById('commonDisplayMessage');
        let fileInput = files.lastIndexOf('.');
        let fileName = files.substring(fileInput, files.length);

        console.log('file path--- ', fileName);

        if (fileName === '.xlsx') {

          let fileInput = document.getElementById('fileName');
          let fileData = fileInput.files[0];
          const formData = new FormData();
          formData.append('studentDetails', fileData);

          let loader=document.querySelector('.overlay');
          loader.style.display = 'block';

          dynamicExcelUploadFetch(`<%- BASE_URL %>elective/uploadStudentData`, 'POST', formData)
            .then(response => {
              console.log('Error Response: ', response.nonInserted);
              if (response.status === 'error') {

                loader.style.display = 'none';
                window.location.href = response.redirectTo;
              } else if (response.status === 'fileError') {

                loader.style.display = 'none';

                let msg = document.getElementById('msgModal');
                let modalPage = `<div><h4 style="text-align:center;">${response.message}</h4></div>`
                msg.innerHTML = modalPage;
                document.querySelector('[data-target="#messageModal"]').click();

              } else {
                loader.style.display = 'none';
                fileMessage(response);
              }
            });

        } else {

          loader.style.display = 'none';

          let message = `File Format Should Be In Excel Only !!`;
          let msg = document.getElementById('msgModal');
          let modalPage = `<div><h4 style="text-align:center;">${message}</h4></div>`
          msg.innerHTML = modalPage;
          document.querySelector('[data-target="#messageModal"]').click();

        }
      }
    });



    document.addEventListener('click', (e) => {

      if (e.target.classList.contains('btnSubmit')) {

        let fname = document.getElementById('inputFname').value;
        let lname = document.getElementById('inputLname').value;
        let rollNo = document.getElementById('inputrollNo').value;
        let campus = document.getElementById('inputCampus').value;
        let studUsername = document.getElementById('inputUname').value;
        let acadYear = document.getElementById('inputAcadYear').value;
        let acadSession = document.getElementById('inputAcadSession').value;

        let fnameVal = fnameValidation(fname);
        let lnameVal = lnameValidation(lname);
        let rollNoVal = rollNoValidation(rollNo);
        let campusVal = campusValidation(campus);
        let unameVal = unameValidation(studUsername);
        let yearVal = acadYearValidation(acadYear);
        let sessionVal = acadSessionValidation(acadSession);

        if (fnameVal && lnameVal && rollNoVal && campusVal && unameVal && yearVal && sessionVal) {

          let obj = { fname, lname, rollNo, campus, studUsername, acadYear, acadSession };
          let loader=document.querySelector('.overlay');
          loader.style.display = 'block';


          dynamicFetchApi(`<%- BASE_URL %>elective/registerStudentManually`, 'POST', obj)
            .then(responseData => {
              console.log('response----- ', responseData.status);
              if (responseData.status === 'error') {
                loader.style.display = 'none';
                window.location.href = responseData.redirectTo;
              } else {
                loader.style.display = 'none';
                let msg = document.getElementById('msgModal');
                let modalPage = `<div><h4 style="text-align:center;">${responseData.message}</h4></div>`
                msg.innerHTML = modalPage;
                document.querySelector('[data-target="#messageModal"]').click();
              }
            });
        }

      }

    });


    //FirstName Validation
    function fnameValidation(fname) {

      let inputFname = document.getElementById('fnameError');

      if (fname.length > 0) {

        let inputVal = alphabetsValidation(fname);

        console.log('Validated---- ', inputVal);

        if (inputVal) {

          inputFname.innerText = '';
          return inputVal;

        } else {

          inputFname.innerText = '*Invalid Input Field';
          return inputVal;

        }
      } else {

        inputFname.innerText = '*Required';

      }
    };

    //LastName Validation
    function lnameValidation(lname) {

      let inputLname = document.getElementById('lnameError');

      if (lname.length > 0) {

        let inputVal = alphabetsValidation(lname);
        console.log('Validated---- ', inputVal);

        if (inputVal) {

          inputLname.innerText = '';
          return inputVal;

        } else {

          console.log("Special Characters present");
          inputLname.innerText = '*Invalid Input Field';
          return inputVal;

        }
      } else {

        inputLname.innerText = '*Required';

      }
    };

    //RollNo Validation
    function rollNoValidation(rollNo) {

      let inputrollNo = document.getElementById('rollNoError');

      if (rollNo.length > 0) {

        let rollNoVal = specialCharacterValidation(rollNo);

        if (rollNoVal) {
       
         let hasNumber = 0;

        for (let i = 0; i < rollNo.length; i++) {
          let char = rollNo[i];
          let asciiValue = rollNo.charCodeAt(i)
          if (asciiValue >= 65 && asciiValue <= 90 || asciiValue >= 97 && asciiValue <= 122 ) {
            hasNumber++;
          } 
        }

        if (hasNumber == rollNo.length) {
          inputrollNo.innerText = '*Roll number must contain both letters and numbers';
          return false;
        } else {
          inputrollNo.innerText = '';
          return true;
        }
        } else {

          inputrollNo.innerText = '*Invalid Input Field';
          return rollNoVal;

        }
      } else {
        inputrollNo.innerText = '*Required';
        return false;
      }
    }

    //Campus Validation
    function campusValidation(campus) {

      let campusError = document.querySelector('#campusError');
      let campusOptions = document.querySelector('#inputCampus');

      let campusName = campusOptions[0].innerText;

      if (campus == campusName) {

        campusError.innerText = '*Required';
        return false;

      } else {

        campusError.innerText = '';
        return true;

      }
    }

    //Username Validation
    function unameValidation(username) {

        let unameError = document.getElementById('unameError');

        if (username.length > 0) {

          let userValidation = NumberValidation(username);
          if (userValidation) {
            if(username.length == 11){
              unameError.innerText = '';
              return true;
            }else{
              unameError.innerText = '*Username must contain 11 digits only ';
              return false;
            }
          } else {
            unameError.innerText = '*Invalid Inputs'; 
            return false;
          }

        } else {

          unameError.innerText = '*Required';
          return false;

        }

    }

    //AcadYear Validation
    function acadYearValidation(acadYear) {

      let yearError = document.querySelector('#yearError');
      let yearOptions = document.querySelector('#inputAcadYear');

      let year = yearOptions[0].innerText;

      if (acadYear == year) {

        yearError.innerText = '*Required';
        return false;

      } else {

        yearError.innerText = '';
        return true;

      }
    }

    //AcadSession Validation
    function acadSessionValidation(session) {

      let sessionError = document.querySelector('#sessionError');
      let sessionOptions = document.querySelector('#inputAcadSession');

      let acadSession = sessionOptions[0].innerText;

      if (session == acadSession) {

        sessionError.innerText = '*Required';
        return false;

      } else {

        sessionError.innerText = '';
        return true;

      }
    }

    async function fileMessage(response) {

      let msg = document.getElementById('msgModal');
      let modalPage = `<div><h4 style="text-align:center;">${response.message}</h4></div>`
      msg.innerHTML = modalPage;
      document.querySelector('[data-target="#messageModal"]').click();

      if (response.status === 'success') {

        let studArray = await response.nonInserted;
        console.log('Non inserted data: ', studArray);

        if (studArray.length != 0) {

          let iTag = `<i style='font-weight:bold;color:red;'>Empty Field</i>`;

          let nonInsertedData = `<table class="table table-bordered table-responsive-lg text-center" >
                                 <tr>
                                 <th>Sr No.</th>
                                 <th>Firstname</th>
                                 <th>Lastname</th>
                                 <th>Username</th>
                                 <th>Campus</th>
                                 <th>Acad Year</th>
                                 <th>Acad Session</th>
                                 <th>Roll No.</th>  
                                 </tr>
                                 ${studArray.map((data, index) => `
                                 <tr>
                                 <td>${index + 1}</td>
                                 <td>${data.studentFirstName ? data.studentFirstName : iTag}</td>
                                 <td>${data.studentLastName ? data.studentLastName : iTag}</td>
                                 <td>${data.studentUname ? data.studentUname : iTag}</td>
                                 <td>${data.campus ? data.campus : iTag}</td>
                                 <td>${data.acadYear ? data.acadYear : iTag}</td>
                                 <td>${data.acadSession ? data.acadSession : iTag}</td>
                                 <td>${data.rollNo ? data.rollNo : iTag}</td>
                                 </tr>`
          ).join('')}
                                 </table>`;

          let nonInsertedMessage = document.querySelector('#nonInsertedMessage');
          nonInsertedMessage.style.visibility = 'visible';

          let nonInsertedStudents = document.querySelector('#nonInsertedStudents');
          nonInsertedStudents.innerHTML = nonInsertedData;

        }
      }
    }

    document.addEventListener('click', (e) => {
      if (e.target.classList.contains('excelDataCancel')) {
        cancelButtonRedirect(`<%- BASE_URL %>elective/dashboard`);
      }
    })


  </script>

</html>